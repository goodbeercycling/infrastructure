Description: Static website via S3 and Cloudfront
Parameters:
  Domain:
    Description: The primary domain
    Type: String
  HostedZoneId:
    Description: The Route 53 hosted zone for the primary domain
    Type: String
  BucketName:
    Description: The bucket (in us-west-2) with content
    Type: String
  BucketArn:
    Description: The ARN of the bucket with content
    Type: String
  Cert:
    Description: ARN of the certificate to use for this site
    Type: String

Resources:
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref BucketName
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: s3:GetObject
            Principal:
              Service: 'cloudfront.amazonaws.com'
            Effect: Allow
            Resource: !Sub '${BucketArn}/*'
            Condition:
              StringEquals:
                'AWS:SourceArn': !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}'
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref "Domain"
        DefaultCacheBehavior:
          AllowedMethods:
            - HEAD
            - GET
          Compress: true
          TargetOriginId: !Sub 'S3-${AWS::StackName}-root'
          ForwardedValues:
            QueryString: true
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: 'http2'
        IPV6Enabled: true
        Origins:
          - DomainName: !Sub '${BucketName}.s3.us-west-2.amazonaws.com'
            Id: !Sub 'S3-${AWS::StackName}-root'
            OriginAccessControlId: !Ref OriginAccessControl
            S3OriginConfig: {}
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !Ref Cert
          MinimumProtocolVersion: TLSv1.2_2018
          SslSupportMethod: sni-only
      Tags:
        - Key: Name
          Value: !Join [ '-', [ !Ref "Domain", "cf-distribution" ]]
        - Key: project
          Value: tgb
  OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        # Get a unique ID for the OAC Config name.
        # Name must be unique within account
        Name: !Sub
          - amzn-secure-static-site-${guid}
          - guid: !Select [2, !Split ['/', !Ref 'AWS::StackId']]
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
  Route53Entry:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub '${Domain}.'
      RecordSets:
        - Name: !Ref "Domain"
          Type: A
          AliasTarget:
            # Cloudfront zone id hardcoded
            HostedZoneId: 'Z2FDTNDATAQYW2'
            DNSName: !GetAtt 'CloudFrontDistribution.DomainName'
